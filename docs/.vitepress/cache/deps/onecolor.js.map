{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/color.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/XYZ.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/LAB.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/HSV.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/HSL.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/CMYK.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/namedColors.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/clearer.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/luminance.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/contrast.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/darken.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/desaturate.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/grayscale.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/isDark.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/isLight.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/lighten.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/mix.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/negate.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/opaquer.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/rotate.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/saturate.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/lib/plugins/toAlpha.js", "../../../../node_modules/.pnpm/onecolor@3.1.0/node_modules/onecolor/index.js"],
  "sourcesContent": ["var installedColorSpaces = [],\n    undef = function (obj) {\n        return typeof obj === 'undefined';\n    },\n    channelRegExp = /\\s*(\\.\\d+|\\d+(?:\\.\\d+)?)(%)?\\s*/,\n    percentageChannelRegExp = /\\s*(\\.\\d+|100|\\d?\\d(?:\\.\\d+)?)%\\s*/,\n    alphaChannelRegExp = /\\s*(\\.\\d+|\\d+(?:\\.\\d+)?)\\s*/,\n    cssColorRegExp = new RegExp(\n                         '^(rgb|hsl|hsv)a?' +\n                         '\\\\(' +\n                             channelRegExp.source + ',' +\n                             channelRegExp.source + ',' +\n                             channelRegExp.source +\n                             '(?:,' + alphaChannelRegExp.source + ')?' +\n                         '\\\\)$', 'i');\n\nfunction color(obj) {\n    if (Array.isArray(obj)) {\n        if (typeof obj[0] === 'string' && typeof color[obj[0]] === 'function') {\n            // Assumed array from .toJSON()\n            return new color[obj[0]](obj.slice(1, obj.length));\n        } else if (obj.length === 4) {\n            // Assumed 4 element int RGB array from canvas with all channels [0;255]\n            return new color.RGB(obj[0] / 255, obj[1] / 255, obj[2] / 255, obj[3] / 255);\n        }\n    } else if (typeof obj === 'string') {\n        var lowerCased = obj.toLowerCase();\n        if (color.namedColors[lowerCased]) {\n            obj = '#' + color.namedColors[lowerCased];\n        }\n        if (lowerCased === 'transparent') {\n            obj = 'rgba(0,0,0,0)';\n        }\n        // Test for CSS rgb(....) string\n        var matchCssSyntax = obj.match(cssColorRegExp);\n        if (matchCssSyntax) {\n            var colorSpaceName = matchCssSyntax[1].toUpperCase(),\n                alpha = undef(matchCssSyntax[8]) ? matchCssSyntax[8] : parseFloat(matchCssSyntax[8]),\n                hasHue = colorSpaceName[0] === 'H',\n                firstChannelDivisor = matchCssSyntax[3] ? 100 : (hasHue ? 360 : 255),\n                secondChannelDivisor = (matchCssSyntax[5] || hasHue) ? 100 : 255,\n                thirdChannelDivisor = (matchCssSyntax[7] || hasHue) ? 100 : 255;\n            if (undef(color[colorSpaceName])) {\n                throw new Error('color.' + colorSpaceName + ' is not installed.');\n            }\n            return new color[colorSpaceName](\n                parseFloat(matchCssSyntax[2]) / firstChannelDivisor,\n                parseFloat(matchCssSyntax[4]) / secondChannelDivisor,\n                parseFloat(matchCssSyntax[6]) / thirdChannelDivisor,\n                alpha\n            );\n        }\n        // Assume hex syntax\n        if (obj.length < 6) {\n            // Allow CSS shorthand\n            obj = obj.replace(/^#?([0-9a-f])([0-9a-f])([0-9a-f])$/i, '$1$1$2$2$3$3');\n        }\n        // Split obj into red, green, and blue components\n        var hexMatch = obj.match(/^#?([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])$/i);\n        if (hexMatch) {\n            return new color.RGB(\n                parseInt(hexMatch[1], 16) / 255,\n                parseInt(hexMatch[2], 16) / 255,\n                parseInt(hexMatch[3], 16) / 255\n            );\n        }\n\n        // No match so far. Lets try the less likely ones\n        if (color.CMYK) {\n            var cmykMatch = obj.match(new RegExp(\n                             '^cmyk' +\n                             '\\\\(' +\n                                 percentageChannelRegExp.source + ',' +\n                                 percentageChannelRegExp.source + ',' +\n                                 percentageChannelRegExp.source + ',' +\n                                 percentageChannelRegExp.source +\n                             '\\\\)$', 'i'));\n            if (cmykMatch) {\n                return new color.CMYK(\n                    parseFloat(cmykMatch[1]) / 100,\n                    parseFloat(cmykMatch[2]) / 100,\n                    parseFloat(cmykMatch[3]) / 100,\n                    parseFloat(cmykMatch[4]) / 100\n                );\n            }\n        }\n    } else if (typeof obj === 'object' && obj.isColor) {\n        return obj;\n    }\n    return false;\n}\n\ncolor.namedColors = {};\n\ncolor.installColorSpace = function (colorSpaceName, propertyNames, config) {\n    color[colorSpaceName] = function (a1) { // ...\n        var args = Array.isArray(a1) ? a1 : arguments;\n        propertyNames.forEach(function (propertyName, i) {\n            var propertyValue = args[i];\n            if (propertyName === 'alpha') {\n                this._alpha = (isNaN(propertyValue) || propertyValue > 1) ? 1 : (propertyValue < 0 ? 0 : propertyValue);\n            } else {\n                if (isNaN(propertyValue)) {\n                    throw new Error('[' + colorSpaceName + ']: Invalid color: (' + propertyNames.join(',') + ')');\n                }\n                if (propertyName === 'hue') {\n                    this._hue = propertyValue < 0 ? propertyValue - Math.floor(propertyValue) : propertyValue % 1;\n                } else {\n                    this['_' + propertyName] = propertyValue < 0 ? 0 : (propertyValue > 1 ? 1 : propertyValue);\n                }\n            }\n        }, this);\n    };\n    color[colorSpaceName].propertyNames = propertyNames;\n\n    var prototype = color[colorSpaceName].prototype;\n\n    ['valueOf', 'hex', 'hexa', 'css', 'cssa'].forEach(function (methodName) {\n        prototype[methodName] = prototype[methodName] || (colorSpaceName === 'RGB' ? prototype.hex : function () {\n            return this.rgb()[methodName]();\n        });\n    });\n\n    prototype.isColor = true;\n\n    prototype.equals = function (otherColor, epsilon) {\n        if (undef(epsilon)) {\n            epsilon = 1e-10;\n        }\n\n        otherColor = otherColor[colorSpaceName.toLowerCase()]();\n\n        for (var i = 0; i < propertyNames.length; i = i + 1) {\n            if (Math.abs(this['_' + propertyNames[i]] - otherColor['_' + propertyNames[i]]) > epsilon) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    prototype.toJSON = function () {\n        return [colorSpaceName].concat(propertyNames.map(function (propertyName) {\n            return this['_' + propertyName];\n        }, this));\n    };\n\n    for (var propertyName in config) {\n        if (config.hasOwnProperty(propertyName)) {\n            var matchFromColorSpace = propertyName.match(/^from(.*)$/);\n            if (matchFromColorSpace) {\n                color[matchFromColorSpace[1].toUpperCase()].prototype[colorSpaceName.toLowerCase()] = config[propertyName];\n            } else {\n                prototype[propertyName] = config[propertyName];\n            }\n        }\n    }\n\n    // It is pretty easy to implement the conversion to the same color space:\n    prototype[colorSpaceName.toLowerCase()] = function () {\n        return this;\n    };\n    prototype.toString = function () {\n        return '[' + colorSpaceName + ' ' + propertyNames.map(function (propertyName) {\n            return this['_' + propertyName];\n        }, this).join(', ') + ']';\n    };\n\n    // Generate getters and setters\n    propertyNames.forEach(function (propertyName) {\n        var shortName = propertyName === 'black' ? 'k' : propertyName.charAt(0);\n        prototype[propertyName] = prototype[shortName] = function (value, isDelta) {\n            // Simple getter mode: color.red()\n            if (typeof value === 'undefined') {\n                return this['_' + propertyName];\n            } else if (isDelta) {\n                // Adjuster: color.red(+.2, true)\n                return new this.constructor(propertyNames.map(function (otherPropertyName) {\n                    return this['_' + otherPropertyName] + (propertyName === otherPropertyName ? value : 0);\n                }, this));\n            } else {\n                // Setter: color.red(.2);\n                return new this.constructor(propertyNames.map(function (otherPropertyName) {\n                    return (propertyName === otherPropertyName) ? value : this['_' + otherPropertyName];\n                }, this));\n            }\n        };\n    });\n\n    function installForeignMethods(targetColorSpaceName, sourceColorSpaceName) {\n        var obj = {};\n        obj[sourceColorSpaceName.toLowerCase()] = function () {\n            return this.rgb()[sourceColorSpaceName.toLowerCase()]();\n        };\n        color[sourceColorSpaceName].propertyNames.forEach(function (propertyName) {\n            var shortName = propertyName === 'black' ? 'k' : propertyName.charAt(0);\n            obj[propertyName] = obj[shortName] = function (value, isDelta) {\n                return this[sourceColorSpaceName.toLowerCase()]()[propertyName](value, isDelta);\n            };\n        });\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop) && color[targetColorSpaceName].prototype[prop] === undefined) {\n                color[targetColorSpaceName].prototype[prop] = obj[prop];\n            }\n        }\n    }\n\n    installedColorSpaces.forEach(function (otherColorSpaceName) {\n        installForeignMethods(colorSpaceName, otherColorSpaceName);\n        installForeignMethods(otherColorSpaceName, colorSpaceName);\n    });\n\n    installedColorSpaces.push(colorSpaceName);\n    return color;\n};\n\ncolor.pluginList = [];\n\ncolor.use = function (plugin) {\n    if (color.pluginList.indexOf(plugin) === -1) {\n        this.pluginList.push(plugin);\n        plugin(color);\n    }\n    return color;\n};\n\ncolor.installMethod = function (name, fn) {\n    installedColorSpaces.forEach(function (colorSpace) {\n        color[colorSpace].prototype[name] = fn;\n    });\n    return this;\n};\n\ncolor.installColorSpace('RGB', ['red', 'green', 'blue', 'alpha'], {\n    hex: function () {\n        var hexString = (Math.round(255 * this._red) * 0x10000 + Math.round(255 * this._green) * 0x100 + Math.round(255 * this._blue)).toString(16);\n        return '#' + ('00000'.substr(0, 6 - hexString.length)) + hexString;\n    },\n\n    hexa: function () {\n        var alphaString = Math.round(this._alpha * 255).toString(16);\n        return '#' + '00'.substr(0, 2 - alphaString.length) + alphaString + this.hex().substr(1, 6);\n    },\n\n    css: function () {\n        return 'rgb(' + Math.round(255 * this._red) + ',' + Math.round(255 * this._green) + ',' + Math.round(255 * this._blue) + ')';\n    },\n\n    cssa: function () {\n        return 'rgba(' + Math.round(255 * this._red) + ',' + Math.round(255 * this._green) + ',' + Math.round(255 * this._blue) + ',' + this._alpha + ')';\n    }\n});\n\nmodule.exports = color;\n", "module.exports = function XYZ(color) {\n    color.installColorSpace('XYZ', ['x', 'y', 'z', 'alpha'], {\n        fromRgb: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=02#text2\n            var convert = function (channel) {\n                    return channel > 0.04045 ?\n                        Math.pow((channel + 0.055) / 1.055, 2.4) :\n                        channel / 12.92;\n                },\n                r = convert(this._red),\n                g = convert(this._green),\n                b = convert(this._blue);\n\n            // Reference white point sRGB D65:\n            // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n            return new color.XYZ(\n                r * 0.4124564 + g * 0.3575761 + b * 0.1804375,\n                r * 0.2126729 + g * 0.7151522 + b * 0.0721750,\n                r * 0.0193339 + g * 0.1191920 + b * 0.9503041,\n                this._alpha\n            );\n        },\n\n        rgb: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=01#text1\n            var x = this._x,\n                y = this._y,\n                z = this._z,\n                convert = function (channel) {\n                    return channel > 0.0031308 ?\n                        1.055 * Math.pow(channel, 1 / 2.4) - 0.055 :\n                        12.92 * channel;\n                };\n\n            // Reference white point sRGB D65:\n            // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n            return new color.RGB(\n                convert(x *  3.2404542 + y * -1.5371385 + z * -0.4985314),\n                convert(x * -0.9692660 + y *  1.8760108 + z *  0.0415560),\n                convert(x *  0.0556434 + y * -0.2040259 + z *  1.0572252),\n                this._alpha\n            );\n        },\n\n        lab: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=07#text7\n            var convert = function (channel) {\n                    return channel > 0.008856 ?\n                        Math.pow(channel, 1 / 3) :\n                        7.787037 * channel + 4 / 29;\n                },\n                x = convert(this._x /  95.047),\n                y = convert(this._y / 100.000),\n                z = convert(this._z / 108.883);\n\n            return new color.LAB(\n                (116 * y) - 16,\n                500 * (x - y),\n                200 * (y - z),\n                this._alpha\n            );\n        }\n    });\n};\n", "module.exports = function LAB(color) {\n    color.use(require('./XYZ.js'));\n\n    color.installColorSpace('LAB', ['l', 'a', 'b', 'alpha'], {\n        fromRgb: function () {\n            return this.xyz().lab();\n        },\n\n        rgb: function () {\n            return this.xyz().rgb();\n        },\n\n        xyz: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=08#text8\n            var convert = function (channel) {\n                    var pow = Math.pow(channel, 3);\n                    return pow > 0.008856 ?\n                        pow :\n                        (channel - 16 / 116) / 7.87;\n                },\n                y = (this._l + 16) / 116,\n                x = this._a / 500 + y,\n                z = y - this._b / 200;\n\n            return new color.XYZ(\n                convert(x) *  95.047,\n                convert(y) * 100.000,\n                convert(z) * 108.883,\n                this._alpha\n            );\n        }\n    });\n};\n", "module.exports = function HSV(color) {\n    color.installColorSpace('HSV', ['hue', 'saturation', 'value', 'alpha'], {\n        rgb: function () {\n            var hue = this._hue,\n                saturation = this._saturation,\n                value = this._value,\n                i = Math.min(5, Math.floor(hue * 6)),\n                f = hue * 6 - i,\n                p = value * (1 - saturation),\n                q = value * (1 - f * saturation),\n                t = value * (1 - (1 - f) * saturation),\n                red,\n                green,\n                blue;\n            switch (i) {\n            case 0:\n                red = value;\n                green = t;\n                blue = p;\n                break;\n            case 1:\n                red = q;\n                green = value;\n                blue = p;\n                break;\n            case 2:\n                red = p;\n                green = value;\n                blue = t;\n                break;\n            case 3:\n                red = p;\n                green = q;\n                blue = value;\n                break;\n            case 4:\n                red = t;\n                green = p;\n                blue = value;\n                break;\n            case 5:\n                red = value;\n                green = p;\n                blue = q;\n                break;\n            }\n            return new color.RGB(red, green, blue, this._alpha);\n        },\n\n        hsl: function () {\n            var l = (2 - this._saturation) * this._value,\n                sv = this._saturation * this._value,\n                svDivisor = l <= 1 ? l : (2 - l),\n                saturation;\n\n            // Avoid division by zero when lightness approaches zero:\n            if (svDivisor < 1e-9) {\n                saturation = 0;\n            } else {\n                saturation = sv / svDivisor;\n            }\n            return new color.HSL(this._hue, saturation, l / 2, this._alpha);\n        },\n\n        fromRgb: function () { // Becomes one.color.RGB.prototype.hsv\n            var red = this._red,\n                green = this._green,\n                blue = this._blue,\n                max = Math.max(red, green, blue),\n                min = Math.min(red, green, blue),\n                delta = max - min,\n                hue,\n                saturation = (max === 0) ? 0 : (delta / max),\n                value = max;\n            if (delta === 0) {\n                hue = 0;\n            } else {\n                switch (max) {\n                case red:\n                    hue = (green - blue) / delta / 6 + (green < blue ? 1 : 0);\n                    break;\n                case green:\n                    hue = (blue - red) / delta / 6 + 1 / 3;\n                    break;\n                case blue:\n                    hue = (red - green) / delta / 6 + 2 / 3;\n                    break;\n                }\n            }\n            return new color.HSV(hue, saturation, value, this._alpha);\n        }\n    });\n};\n", "module.exports = function HSL(color) {\n    color.use(require('./HSV'));\n\n    color.installColorSpace('HSL', ['hue', 'saturation', 'lightness', 'alpha'], {\n        hsv: function () {\n            // Algorithm adapted from http://wiki.secondlife.com/wiki/Color_conversion_scripts\n            var l = this._lightness * 2,\n                s = this._saturation * ((l <= 1) ? l : 2 - l),\n                saturation;\n\n            // Avoid division by zero when l + s is very small (approaching black):\n            if (l + s < 1e-9) {\n                saturation = 0;\n            } else {\n                saturation = (2 * s) / (l + s);\n            }\n\n            return new color.HSV(this._hue, saturation, (l + s) / 2, this._alpha);\n        },\n\n        rgb: function () {\n            return this.hsv().rgb();\n        },\n\n        fromRgb: function () { // Becomes one.color.RGB.prototype.hsv\n            return this.hsv().hsl();\n        }\n    });\n};\n", "module.exports = function CMYK(color) {\n    color.installColorSpace('CMYK', ['cyan', 'magenta', 'yellow', 'black', 'alpha'], {\n        rgb: function () {\n            return new color.RGB((1 - this._cyan * (1 - this._black) - this._black),\n                                     (1 - this._magenta * (1 - this._black) - this._black),\n                                     (1 - this._yellow * (1 - this._black) - this._black),\n                                     this._alpha);\n        },\n\n        fromRgb: function () { // Becomes one.color.RGB.prototype.cmyk\n            // Adapted from http://www.javascripter.net/faq/rgb2cmyk.htm\n            var red = this._red,\n                green = this._green,\n                blue = this._blue,\n                cyan = 1 - red,\n                magenta = 1 - green,\n                yellow = 1 - blue,\n                black = 1;\n            if (red || green || blue) {\n                black = Math.min(cyan, Math.min(magenta, yellow));\n                cyan = (cyan - black) / (1 - black);\n                magenta = (magenta - black) / (1 - black);\n                yellow = (yellow - black) / (1 - black);\n            } else {\n                black = 1;\n            }\n            return new color.CMYK(cyan, magenta, yellow, black, this._alpha);\n        }\n    });\n};\n", "module.exports = function namedColors(color) {\n    color.namedColors = {\n        aliceblue: 'f0f8ff',\n        antiquewhite: 'faebd7',\n        aqua: '0ff',\n        aquamarine: '7fffd4',\n        azure: 'f0ffff',\n        beige: 'f5f5dc',\n        bisque: 'ffe4c4',\n        black: '000',\n        blanchedalmond: 'ffebcd',\n        blue: '00f',\n        blueviolet: '8a2be2',\n        brown: 'a52a2a',\n        burlywood: 'deb887',\n        cadetblue: '5f9ea0',\n        chartreuse: '7fff00',\n        chocolate: 'd2691e',\n        coral: 'ff7f50',\n        cornflowerblue: '6495ed',\n        cornsilk: 'fff8dc',\n        crimson: 'dc143c',\n        cyan: '0ff',\n        darkblue: '00008b',\n        darkcyan: '008b8b',\n        darkgoldenrod: 'b8860b',\n        darkgray: 'a9a9a9',\n        darkgrey: 'a9a9a9',\n        darkgreen: '006400',\n        darkkhaki: 'bdb76b',\n        darkmagenta: '8b008b',\n        darkolivegreen: '556b2f',\n        darkorange: 'ff8c00',\n        darkorchid: '9932cc',\n        darkred: '8b0000',\n        darksalmon: 'e9967a',\n        darkseagreen: '8fbc8f',\n        darkslateblue: '483d8b',\n        darkslategray: '2f4f4f',\n        darkslategrey: '2f4f4f',\n        darkturquoise: '00ced1',\n        darkviolet: '9400d3',\n        deeppink: 'ff1493',\n        deepskyblue: '00bfff',\n        dimgray: '696969',\n        dimgrey: '696969',\n        dodgerblue: '1e90ff',\n        firebrick: 'b22222',\n        floralwhite: 'fffaf0',\n        forestgreen: '228b22',\n        fuchsia: 'f0f',\n        gainsboro: 'dcdcdc',\n        ghostwhite: 'f8f8ff',\n        gold: 'ffd700',\n        goldenrod: 'daa520',\n        gray: '808080',\n        grey: '808080',\n        green: '008000',\n        greenyellow: 'adff2f',\n        honeydew: 'f0fff0',\n        hotpink: 'ff69b4',\n        indianred: 'cd5c5c',\n        indigo: '4b0082',\n        ivory: 'fffff0',\n        khaki: 'f0e68c',\n        lavender: 'e6e6fa',\n        lavenderblush: 'fff0f5',\n        lawngreen: '7cfc00',\n        lemonchiffon: 'fffacd',\n        lightblue: 'add8e6',\n        lightcoral: 'f08080',\n        lightcyan: 'e0ffff',\n        lightgoldenrodyellow: 'fafad2',\n        lightgray: 'd3d3d3',\n        lightgrey: 'd3d3d3',\n        lightgreen: '90ee90',\n        lightpink: 'ffb6c1',\n        lightsalmon: 'ffa07a',\n        lightseagreen: '20b2aa',\n        lightskyblue: '87cefa',\n        lightslategray: '789',\n        lightslategrey: '789',\n        lightsteelblue: 'b0c4de',\n        lightyellow: 'ffffe0',\n        lime: '0f0',\n        limegreen: '32cd32',\n        linen: 'faf0e6',\n        magenta: 'f0f',\n        maroon: '800000',\n        mediumaquamarine: '66cdaa',\n        mediumblue: '0000cd',\n        mediumorchid: 'ba55d3',\n        mediumpurple: '9370d8',\n        mediumseagreen: '3cb371',\n        mediumslateblue: '7b68ee',\n        mediumspringgreen: '00fa9a',\n        mediumturquoise: '48d1cc',\n        mediumvioletred: 'c71585',\n        midnightblue: '191970',\n        mintcream: 'f5fffa',\n        mistyrose: 'ffe4e1',\n        moccasin: 'ffe4b5',\n        navajowhite: 'ffdead',\n        navy: '000080',\n        oldlace: 'fdf5e6',\n        olive: '808000',\n        olivedrab: '6b8e23',\n        orange: 'ffa500',\n        orangered: 'ff4500',\n        orchid: 'da70d6',\n        palegoldenrod: 'eee8aa',\n        palegreen: '98fb98',\n        paleturquoise: 'afeeee',\n        palevioletred: 'd87093',\n        papayawhip: 'ffefd5',\n        peachpuff: 'ffdab9',\n        peru: 'cd853f',\n        pink: 'ffc0cb',\n        plum: 'dda0dd',\n        powderblue: 'b0e0e6',\n        purple: '800080',\n        rebeccapurple: '639',\n        red: 'f00',\n        rosybrown: 'bc8f8f',\n        royalblue: '4169e1',\n        saddlebrown: '8b4513',\n        salmon: 'fa8072',\n        sandybrown: 'f4a460',\n        seagreen: '2e8b57',\n        seashell: 'fff5ee',\n        sienna: 'a0522d',\n        silver: 'c0c0c0',\n        skyblue: '87ceeb',\n        slateblue: '6a5acd',\n        slategray: '708090',\n        slategrey: '708090',\n        snow: 'fffafa',\n        springgreen: '00ff7f',\n        steelblue: '4682b4',\n        tan: 'd2b48c',\n        teal: '008080',\n        thistle: 'd8bfd8',\n        tomato: 'ff6347',\n        turquoise: '40e0d0',\n        violet: 'ee82ee',\n        wheat: 'f5deb3',\n        white: 'fff',\n        whitesmoke: 'f5f5f5',\n        yellow: 'ff0',\n        yellowgreen: '9acd32'\n    };\n};\n", "module.exports = function clearer(color) {\n    color.installMethod('clearer', function (amount) {\n        return this.alpha(isNaN(amount) ? -0.1 : -amount, true);\n    });\n};\n", "module.exports = function luminance(color) {\n  // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\n  function channelLuminance(value) {\n    return (value <= 0.03928) ? value / 12.92 : Math.pow(((value + 0.055) / 1.055), 2.4);\n  }\n\n  color.installMethod('luminance', function () {\n    var rgb = this.rgb();\n    return 0.2126 * channelLuminance(rgb._red) + 0.7152 * channelLuminance(rgb._green) + 0.0722 * channelLuminance(rgb._blue);\n  });\n};\n", "module.exports = function contrast(color) {\n  // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\n  color.use(require('./luminance'));\n\n  color.installMethod('contrast', function (color2) {\n    var lum1 = this.luminance();\n    var lum2 = color2.luminance();\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  });\n};\n", "module.exports = function darken(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('darken', function (amount) {\n        return this.lightness(isNaN(amount) ? -0.1 : -amount, true);\n    });\n};\n", "module.exports = function desaturate(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('desaturate', function (amount) {\n        return this.saturation(isNaN(amount) ? -0.1 : -amount, true);\n    });\n};\n", "module.exports = function grayscale(color) {\n    function gs () {\n        /*jslint strict:false*/\n        var rgb = this.rgb(),\n            val = rgb._red * 0.3 + rgb._green * 0.59 + rgb._blue * 0.11;\n\n        return new color.RGB(val, val, val, rgb._alpha);\n    }\n\n    color.installMethod('greyscale', gs).installMethod('grayscale', gs);\n};\n", "module.exports = function isDark(color) {\n\n  color.installMethod('isDark', function () {\n    var rgb = this.rgb();\n\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var yiq = (rgb._red * 255 * 299 + rgb._green * 255 * 587 + rgb._blue * 255 * 114) / 1000;\n    return yiq < 128;\n  });\n};\n", "module.exports = function isLight(color) {\n\n  color.use(require('./isDark'));\n\n  color.installMethod('isLight', function () {\n    return !this.isDark();\n  });\n};\n", "module.exports = function lighten(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('lighten', function (amount) {\n        return this.lightness(isNaN(amount) ? 0.1 : amount, true);\n    });\n};\n", "module.exports = function mix(color) {\n    color.installMethod('mix', function (otherColor, weight) {\n        otherColor = color(otherColor).rgb();\n        weight = 1 - (isNaN(weight) ? 0.5 : weight);\n\n        var w = weight * 2 - 1,\n            a = this._alpha - otherColor._alpha,\n            weight1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2,\n            weight2 = 1 - weight1,\n            rgb = this.rgb();\n\n        return new color.RGB(\n            rgb._red * weight1 + otherColor._red * weight2,\n            rgb._green * weight1 + otherColor._green * weight2,\n            rgb._blue * weight1 + otherColor._blue * weight2,\n            rgb._alpha * weight + otherColor._alpha * (1 - weight)\n        );\n    });\n};\n", "module.exports = function negate(color) {\n    color.installMethod('negate', function () {\n        var rgb = this.rgb();\n        return new color.RGB(1 - rgb._red, 1 - rgb._green, 1 - rgb._blue, this._alpha);\n    });\n};\n", "module.exports = function opaquer(color) {\n    color.installMethod('opaquer', function (amount) {\n        return this.alpha(isNaN(amount) ? 0.1 : amount, true);\n    });\n};\n", "module.exports = function rotate(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('rotate', function (degrees) {\n        return this.hue((degrees || 0) / 360, true);\n    });\n};\n", "module.exports = function saturate(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('saturate', function (amount) {\n        return this.saturation(isNaN(amount) ? 0.1 : amount, true);\n    });\n};\n", "// Adapted from http://gimp.sourcearchive.com/documentation/2.6.6-1ubuntu1/color-to-alpha_8c-source.html\n// toAlpha returns a color where the values of the argument have been converted to alpha\nmodule.exports = function toAlpha(color) {\n    color.installMethod('toAlpha', function (color) {\n        var me = this.rgb(),\n            other = color(color).rgb(),\n            epsilon = 1e-10,\n            a = new color.RGB(0, 0, 0, me._alpha),\n            channels = ['_red', '_green', '_blue'];\n\n        channels.forEach(function (channel) {\n            if (me[channel] < epsilon) {\n                a[channel] = me[channel];\n            } else if (me[channel] > other[channel]) {\n                a[channel] = (me[channel] - other[channel]) / (1 - other[channel]);\n            } else if (me[channel] > other[channel]) {\n                a[channel] = (other[channel] - me[channel]) / other[channel];\n            } else {\n                a[channel] = 0;\n            }\n        });\n\n        if (a._red > a._green) {\n            if (a._red > a._blue) {\n                me._alpha = a._red;\n            } else {\n                me._alpha = a._blue;\n            }\n        } else if (a._green > a._blue) {\n            me._alpha = a._green;\n        } else {\n            me._alpha = a._blue;\n        }\n\n        if (me._alpha < epsilon) {\n            return me;\n        }\n\n        channels.forEach(function (channel) {\n            me[channel] = (me[channel] - other[channel]) / me._alpha + other[channel];\n        });\n        me._alpha *= a._alpha;\n\n        return me;\n    });\n};\n", "module.exports = require('./lib/color')\n    .use(require('./lib/XYZ'))\n    .use(require('./lib/LAB'))\n    .use(require('./lib/HSV'))\n    .use(require('./lib/HSL'))\n    .use(require('./lib/CMYK'))\n\n    // Convenience functions\n    .use(require('./lib/plugins/namedColors'))\n    .use(require('./lib/plugins/clearer.js'))\n    .use(require('./lib/plugins/contrast.js'))\n    .use(require('./lib/plugins/darken.js'))\n    .use(require('./lib/plugins/desaturate.js'))\n    .use(require('./lib/plugins/grayscale.js'))\n    .use(require('./lib/plugins/isDark.js'))\n    .use(require('./lib/plugins/isLight.js'))\n    .use(require('./lib/plugins/lighten.js'))\n    .use(require('./lib/plugins/luminance.js'))\n    .use(require('./lib/plugins/mix.js'))\n    .use(require('./lib/plugins/negate.js'))\n    .use(require('./lib/plugins/opaquer.js'))\n    .use(require('./lib/plugins/rotate.js'))\n    .use(require('./lib/plugins/saturate.js'))\n    .use(require('./lib/plugins/toAlpha.js'));\n"],
  "mappings": "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",
  "names": ["propertyName", "color"]
}
